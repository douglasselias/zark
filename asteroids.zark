(import "window" create-window)
(import "input" keys)
(from "physics" import 'circle-collision)
(import "math" '(sin cos tan))
(from "random" import 'random-range)
(from "io" import 'print)

(const player-base-size (20: f32))
(const player-speed 6)
(const player-max-shoots (10: int32))

(const meteors-speed 2)
(const max-big-meteors 4)
(const max-medium-meteors 8)
(const max-small-meteors 16)

(struct player (
  (position: Vector2)
  (speed: Vector2)
  (acceleration: f32)
  (rotation: f32)
  (collider: Vector3)
  (color: Color)
))

(struct shoot (
  (position: Vector2)
  (speed: Vector2)
  (radius: f32)
  (active: bool)
  (color: Color)
  (rotation: f32)
  (life-spawn: int32)
))

(struct meteor (
  (position: Vector2)
  (speed: Vector2)
  (radius: f32)
  (active: bool)
  (color: Color)
))

(const screen-width 800)
(const screen-height 450)
; (const screen-dimensions '(800 450))

(let game-over false)
(let pause false)
(let victory false)

; NOTE: Defined triangle is isosceles with common angles of 70 degrees.
(let ship-height 0 float32)

(let player nil)
(let shoot (make-array player-max-shoots))
(let big-meteor (make-array max-big-meteors))
(let medium-meteor (make-array max-medium-meteors))
(let small-meteor (make-array max-small-meteors))

(let mid-meteors-count 0)
(let small-meteors-count 0)
(let destroy-meteors-count 0)

(proc init-game ()
  (let pos-x))

(proc update-game ()
  (when (is-key-pressed "P") (set pause (not pause))
  (if (not pause) 
    (when (is-key-down left-arrow) (set ((get player rotation) -5) )))))

(proc main ()
  (init-window screen-dimentions "Asteroids in Zark!")

  (init-game))